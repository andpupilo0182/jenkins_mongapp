---
- hosts: local
  connection: local
  gather_facts: false
  vars:
    subnet_id: subnet-ALTERAR
  tasks:
  - name: Criando a chave privada para acessar a instancia
    ec2_key:
      name: aws-jenkins-key
      region: us-west-2
    register: ec2_key_result

  - name: Salvando a chave privada em sua maquina, aqui mesmo!!!
    copy: content="{{ ec2_key_result.key.private_key }}" dest="./aws-jenkins-key.pem" mode=0600
    when: ec2_key_result.changed
    
  - name: Criando security group para liberar a porta 80
    ec2_group:
      name: aws-jenkins-group
      description: libera a pora 80
      region: us-west-2
      rules:
        - proto: tcp
          ports:
          - 80
          cidr_ip: 0.0.0.0/0
          rule_desc: libera o http
        - proto: tcp
          ports:
          - 22
          cidr_ip: 0.0.0.0/0
          rule_desc: libera o ssh

  - name: Criando uma instancia t2 micro com ubuntu e instalando docker git e efetuando o deploy da aplicação ;)
    ec2:
      region: us-west-2
      key_name: aws-jenkins-key
      instance_type: t2.micro
      image: ami-0bbe6b35405ecebdb
      group: webserver
      count: 1
      user_data: |
        #!/bin/bash
        apt-get install curl git mongodb-clients mongo-tools -y
        curl fsSl https://get.docker.com/ | bash ; systemcl start docker
        cd /opt/ ; git clone --branch Prod https://github.com/andpupilo0182/MongApp.git
        cd /opt/MongApp ; docker build -t mongapp .
        docker pull mongo
        docker run -dti --name mongodb --hostname mongodb -p 127.0.0.1:27017:27017 mongo
        mongo appdata --eval "printjson(db.createCollection('usuarios'))"
        docker run -dti --name mongapp --hostname mongapp -p 0.0.0.0:80:80 --link mongodb:mongodb mongapp
      wait: yes
      vpc_subnet_id: "{{ subnet_id }}"
      assign_public_ip: yes
      group: aws-jenkins-group
    register: ec2
    #  - name: add ec2 instance to hosts
    #    add_host: name={{ item.public_ip }} groups=group_name
    #    with_items: ec2.instances    

  - ec2_remote_facts:
      region: us-west-2
    register: ec2_facts

  - name: Coletando fatos da instancia
    debug:
      msg: "O ip da sua instancia é: {{ item.1 }}"
    with_together:
      - "{{ ec2_facts.instances|selectattr('state', 'equalto', 'running')|map(attribute='tags.Name')|list }}"
      - "{{ ec2_facts.instances|selectattr('state', 'equalto', 'running')|map(attribute='public_ip_address')|list }}"

  - name: Efetuando alteração do arquivo de inventario
    lineinfile:
      path: ./hosts_inventory
      insertafter: '^127.0.0.1'
      line: "\n[aws]\n{{ item.1 }}"
      state: present
    with_together:
      - "{{ ec2_facts.instances|selectattr('state', 'equalto', 'running')|map(attribute='tags.Name')|list }}"
      - "{{ ec2_facts.instances|selectattr('state', 'equalto', 'running')|map(attribute='public_ip_address')|list }}"

  - name: Aguarde alguns segundos estamos finalizando a instancia
    pause:
      minutes: 2
